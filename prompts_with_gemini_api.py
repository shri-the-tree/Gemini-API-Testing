# -*- coding: utf-8 -*-
"""Copy of Prompts_With_Gemini_API.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/154Vdvx0NNsRCoYTD6uozWsMHdUQaT3No

# Gemini Flash Introduction

<table align="left">
  <td>
    <a target="_blank" href="https://colab.research.google.com/github/google-gemini/cookbook/blob/main/quickstarts/Gemini_Flash_Introduction.ipynb"><img src="https://www.tensorflow.org/images/colab_logo_32px.png" />Run in Google Colab</a>
  </td>
</table>

## Installing the latest version of the Gemini SDK
"""

!pip install -q -U google-generativeai # Install the Python SDK

"""## Import the Gemini python SDK"""

import google.generativeai as genai

"""## Set up your API key

To run the following cell, your API key must be stored it in a Colab Secret named `GOOGLE_API_KEY`. If you don't already have an API key, or you're not sure how to create a Colab Secret, see the [Authentication](https://github.com/google-gemini/cookbook/blob/main/quickstarts/Authentication.ipynb) quickstart for an example.
"""

from google.colab import userdata

GOOGLE_API_KEY=userdata.get('GOOGLE_API_KEY')
genai.configure(api_key=GOOGLE_API_KEY)

"""## Completing the Setup

Next, we will set up a model version and get ready to make some prompts.
"""

version = 'models/gemini-1.5-flash'
model = genai.GenerativeModel(version)

"""Let's consider the following scenario. You have just been hired as a student tutor at UC Berkeley! You're assigned various tasks across campus, helping a variety of students through their homework. Lets use some of the prompts below to help out the students

First, you are tasked to help Derek create a poem from scratch. This poem should be a free verse about the pasta Linguine.
"""

prompt = """Create a free verse about the pasta Linguine. Make it descriptive
about the shape, taste,origin and texture of pasta. Make the poem at least five lines
long."""

response = model.generate_content(prompt)
print(response.text)

"""As an aside, we will be using the `genai.upload_file()` method using the File API from Gemini API. This allows users to upload media files, such as images, audio, and video to be used as input for prompting and generating AI responses. This feature integrates media with text-based prompts to enhance the context and relevance of the generated outputs.

Now, you need to help architecture student Diana place pots and pans in the following kitchen without messing up the style of the existing design.

Thus, we need to determine the key items in this kitchen and the color of these items.

Create a prompt that will take in an image of a room in a house and will redecorate that room given the specifications above.
"""

!wget -O kitchen.jpeg "https://video.udacity-data.com/topher/2024/June/667b0908_kitchen/kitchen.jpeg"

image_upload = genai.upload_file(path='kitchen.jpeg')

from PIL import Image
image = Image.open('kitchen.jpeg')
resized_image = image.resize((int(image.size[0] / 2), int(image.size[1] / 2)))

resized_image

prompt = """This image contains a a kitchen with a seating area (four chairs),
cabinets, stove, a large window, and a knife holder. Give a description of the
following room, including the key components and each of the colors (be specific
about what exact shade) of the items. Explain in what location we could place 5
pots and pans so that the kitchen retains its minimalistic appeal and clutter
doesn't increase substantially."""

model = genai.GenerativeModel('gemini-1.5-flash')
response = model.generate_content([prompt, image_upload])
print(response.text)

"""Now, Harbani, a student in a film class needs your help with understanding a piece of audio given to her.

Help decide what the audio file is comprised of and what kind of mood it sets.
"""

!wget -O summer-rainampthunder-162009.mp3 "https://video.udacity-data.com/topher/2024/June/667b09e0_summer-rain-thunder/summer-rain-thunder.mp3"

audio_upload = genai.upload_file(path='summer-rainampthunder-162009.mp3')

from IPython.display import Audio

Audio("summer-rainampthunder-162009.mp3")

prompt = """Listen carefully to the following audio file, what's in it? What
mood does it set and what kind of film could it be used in?"""

response = model.generate_content([prompt, audio_upload])
print(response.text)

"""Finally, Vanessa on the Tennis team needs your help understanding why she has lost her last few matches. Her coach has told her that she is struggling to place the ball in the correct place.

Break down the following tennis film and summarize what each player does and where the ball lands. Explain how the winning player uses placement to win the point.
"""

!wget -O tennis.mp4 "https://video.udacity-data.com/topher/2024/June/667b096b_tennis/tennis.mp4"

video_upload = genai.upload_file(path='tennis.mp4')

from IPython.display import Video

Video("tennis.mp4", embed=True, width=540)

prompt = """Describe the video. Describe how each tennis player hits the ball and
describe where the ball lands. Explain how the winning player positions the ball
to land in certain spots to win the point."""

response = model.generate_content([prompt, video_upload], request_options={"timeout": 600})
print(response.text)